#ifndef INSTRUCTIONS_H
#define INSTRUCTIONS_H

namespace cpu
{
    enum class Sets
    {
        MAIN,
        CB,
        DD
    };

    enum MainInstructions
    {
        NOP = 0x00,  //  NOP
        LD_BCnn = 0x01,   //  LD  BC,nn
        LD_BCA = 0x02, //  LD  (BC),A
        INC_BC = 0x03,  //  INC BC
        INC_B = 0x04,//  INC B
        DEC_B = 0x05,  //  DEC B
        LD_Bn = 0x06, //  LD  B,n
        RLCA = 0x07, //  RLCA
        EX_AFAF = 0x08,   //  EX  AF,AF'
        ADD_HLBC = 0x09,  //  ADD HL,BC
        LD_ABC = 0x0A, //  LD  A,(BC)
        DEC_BC = 0x0B,  //  DEC BC
        INC_C = 0x0C,  //  INC C
        DEC_C = 0x0D,  //  DEC C
        LD_Cn = 0x0E, //  LD  C,n
        RRCA = 0x0F, //  RRCA
        DJNZ = 0x10, //  DJNZ    e
        LD_DEnn = 0x11, //  LD  DE,nn
        LD_DEA = 0x12, //  LD  (DE),A
        INC_DE = 0x13,  //  INC DE
        INC_D = 0x14,//  INC D
        DEC_D = 0x15,  //  DEC D
        LD_Dn = 0x16, //  LD  D,n
        RLA = 0x17,  //  RLA
        JR_e = 0x18,   //  JR  e
        ADD_HLDE = 0x19,  //  ADD HL,DE
        LD_ADE = 0x1A,   //  LD  A,(DE)
        DEC_DE = 0x1B,  //  DEC DE
        INC_E = 0x1C,//  INC E
        DEC_E = 0x1D,//  DEC E
        LD_En = 0x1E,   //  LD  E,n
        RRA = 0x1F,  //  RRA
        JR_NZe = 0x20,   //  JR  NZ,e
        LD_HLnn = 0x21, //  LD  HL,nn
        LD_nnHL = 0x22, //  LD  (nn),HL
        INC_HL = 0x23,  //  INC HL
        INC_H = 0x24,  //  INC H
        DEC_H = 0x25,  //  DEC H
        LD_Hn = 0x26,//         26  LD  H, n
        DAA = 0x27,//         27  DAA
        JR_Ze = 0x28,//         28  JR  Z, e
        ADD_HLHL = 0x29,//         29  ADD HL, HL
        LD_HLnnn = 0x2A,//         2A  LD  HL, (nn)
        DEC_HL = 0x2B,//         2B  DEC HL
        INC_L = 0x2C,//         2C  INC L
        DEC_L = 0x2D,//         2D  DEC L
        LD_Ln = 0x2E,//         2E  LD  L, n
        CPL = 0x2F,//         2F  CPL
        JR_NCe = 0x30,//         30  JR  NC, e
        LD_SPnn = 0x31,//         31  LD  SP, nn
        LD_nnA = 0x31,//         32  LD(nn), A
        INC_SP = 0x33,//         33  INC SP
        INC_HL1 = 0x34, //         34  INC(HL)
        DEC_HL1 = 0x35,//         35  DEC(HL)
        LD_HLn = 0x36,//         36  LD(HL), n
        SCF = 0x37,//         37  SCF
        JR_Ce = 0x38,//         38  JR  C, e
        ADD_HLSP = 0x39,//         39  ADD HL, SP
        LD_Ann = 0x3A,//         3A  LD  A, (nn)
        DEC_SP = 0x3B,//         3B  DEC SP
        INC_A = 0x3C,//         3C  INC A
        DEC_A = 0x3D,//         3D  DEC A
        LD_An = 0x3E,//         3E  LD  A, n
        CCF = 0x3F,//         3F  CCF
        LD_BB = 0x40,//         40  LD  B, B
        LD_BC = 0x41,//         41  LD  B, C
        LD_BD = 0x42,//         42  LD  B, D
        LD_BE = 0x43,//         43  LD  B, E
        LD_BH = 0x44,//         44  LD  B, H
        LD_BL = 0x45,//         45  LD  B, L
        LD_BHL = 0x46,//         46  LD  B, (HL)
        LD_BA = 0x47,//         47  LD  B, A
        LD_CB = 0x48,//         48  LD  C, B
        LD_CC = 0x49,//         49  LD  C, C
        LD_CD = 0x4A,//         4A  LD  C, D
        LD_CE = 0x4B,//         4B  LD  C, E
        LD_CH = 0x4C,//         4C  LD  C, H
        LD_CL = 0x4D,//         4D  LD  C, L
        LD_CHL = 0x4E,//         4E  LD  C, (HL)
        LD_CA = 0x4F,//         4F  LD  C, A
        LD_DB = 0x50,//         50  LD  D, B
        LD_DC = 0x51,//         51  LD  D, C
        LD_DD = 0x52,//         52  LD  D, D
        LD_DE = 0x53,//         53  LD  D, E
        LD_DH = 0x54,//         54  LD  D, H
        LD_DL = 0x55,//         55  LD  D, L
        LD_DHL = 0x56,//         56  LD  D, (HL)
        LD_DA = 0x57,//         57  LD  D, A
        LD_EB = 0x58,//         58  LD  E, B
        LD_EC = 0x59,//         59  LD  E, C
        LD_ED = 0x5A,//         5A  LD  E, D
        LD_EE = 0x5B,//         5B  LD  E, E
        LD_EH = 0x5C,//         5C  LD  E, H
        LD_EL = 0x5D,//         5D  LD  E, L
        LD_EHL = 0x5E,//         5E  LD  E, (HL)
        LD_EA = 0x5F,//         5F  LD  E, A
        LD_HB = 0x60,//         60  LD  H, B
        LD_HC = 0x61,//         61  LD  H, C
        LD_HD = 0x62,//         62  LD  H, D
        LD_HE = 0x63,//         63  LD  H, E
        LD_HH = 0x64,//         64  LD  H, H
        LD_HL = 0x65,//         65  LD  H, L
        LD_HHL = 0x66,//         66  LD  H, (HL)
        LD_HA = 0x67,//         67  LD  H, A
        LD_LB = 0x68,//         68  LD  L, B
        LD_LC = 0x69,//         69  LD  L, C
        LD_LD = 0x6A,//         6A  LD  L, D
        LD_LE = 0x6B,//         6B  LD  L, E
        LD_LH = 0x6D,//         6C  LD  L, H
        LD_LL = 0x6D,//         6D  LD  L, L
        LD_LHL = 0x6E,//         6E  LD  L, (HL)
        LD_LA = 0x6F,//         6F  LD  L, A
        LDHL_B = 0x70,//         70  LD(HL), B
        LDHL_C = 0x71,//         71  LD(HL), C
        LDHL_D = 0x72,//         72  LD(HL), D
        LDHL_E = 0x73,//         73  LD(HL), E
        LDHL_H = 0x74,//         74  LD(HL), H
        LDHL_L = 0x75,//         75  LD(HL), L
        HALT = 0x76,//         76  HALT
        LDHL_A = 0x77,//         77  LD(HL), A
        LD_AB = 0x78,//         78  LD  A, B
        LD_AC = 0x79,//         79  LD  A, C
        LD_AD = 0x7A,//         7A  LD  A, D
        LD_AE = 0x7B,//         7B  LD  A, E
        LD_AH = 0x7C,//         7C  LD  A, H
        LD_AL = 0x7D,//         7D  LD  A, L
        LD_AHL = 0x7E, //         7E  LD  A, (HL)
        LD_AA = 0x7F,//         7F  LD  A, A
        ADD_AB = 0x80,//         80  ADD A, B
        ADD_AC = 0x81,//         81  ADD A, C
        ADD_AD = 0x82,//         82  ADD A, D
        ADD_AE = 0x83,//         83  ADD A, E
        ADD_AH = 0x84,//         84  ADD A, H
        ADD_AL = 0x85,//         85  ADD A, L
        ADD_AHL = 0x86,//         86  ADD A, (HL)
        ADD_AA = 0x87,//         87  ADD A, A
        ADC_AB = 0x88,//         88  ADC A, B
        ADC_AC = 0x89,//         89  ADC A, C
        ADC_AD = 0x8A,//         8A  ADC A, D
        ADC_AE = 0x8B,//         8B  ADC A, E
        ADC_AH = 0x8C,//         8C  ADC A, H
        ADC_AL = 0x8D,//         8D  ADC A, L
        ADC_AHL = 0x8E,//         8E  ADC A, (HL)
        ADC_AA = 0x8F,//         8F  ADC A, A
        SUB_B = 0x90,//         90  SUB B
        SUB_C = 0x91,//         91  SUB C
        SUB_D = 0x92,//         92  SUB D
        SUB_E = 0x93,//         93  SUB E
        SUB_H = 0x94,//         94  SUB H
        SUB_L = 0x95,//         95  SUB L
        SUB_HL = 0x96,//         96  SUB(HL)
        SUB_A = 0x97,//         97  SUB A
        SBC_B = 0x98,//         98  SBC B
        SBC_C = 0x99,//         99  SBC C
        SBC_D = 0x9A,//         9A  SBC D
        SBC_E = 0x9B,//         9B  SBC E
        SBC_H = 0x9C,//         9C  SBC H
        SBC_L = 0x9D,//         9D  SBC L
        SBC_HL = 0x9E,//         9E  SBC(HL)
        SBC_A = 0x9F,//         9F  SBC A
        AND_B = 0xA0,//         A0  AND B
        AND_C = 0xA1,//         A1  AND C
        AND_D = 0xA2,//         A2  AND D
        AND_E = 0xA3,//         A3  AND E
        AND_H = 0xA4,//         A4  AND H
        AND_L = 0xA5,//         A5  AND L
        AND_HL = 0xA6,//         A6  AND(HL)
        AND_A = 0xA7,//         A7  AND A
        XOR_B = 0xA8,//         A8  XOR B
        XOR_C = 0xA9,//         A9  XOR C
        XOR_D = 0xAA,//         AA  XOR D
        XOR_E = 0xAB,//         AB  XOR E
        XOR_H = 0xAC,//         AC  XOR H
        XOR_L = 0xAD,//         AD  XOR L
        XOR_HL = 0xAE,//         AE  XOR(HL)
        XOR_A = 0xAF,//         AF  XOR A
        OR_B = 0xB0,//         B0  OR  B
        OR_C = 0xB1,//         B1  OR  C
        OR_D = 0xB2,//         B2  OR  D
        OR_E = 0xB3,//         B3  OR  E
        OR_H = 0xB4,//         B4  OR  H
        OR_L = 0xB5, //         B5  OR  L
        OR_HL = 0xB6,//         B6  OR(HL)
        OR_A = 0xB7,//         B7  OR  A
        CP_B = 0xB8,//         B8  CP  B
        CP_C = 0xB9,//         B9  CP  C
        CP_D = 0xBA,//         BA  CP  D
        CP_E = 0xBB,//         BB  CP  E
        CP_H = 0xBC,//         BC  CP  H
        CP_L = 0xBD,//         BD  CP  L
        CP_HL = 0xBE,//         BE  CP(HL)
        CP_A = 0xBF,//         BF  CP  A
        RET_NZ = 0xC0,//         C0  RET NZ
        POP_BC = 0xC1,//         C1  POP BC
        JP_NZnn = 0xC2,//         C2  JP  NZ, nn
        JP_nn = 0xC3,//         C3  JP  nn
        CALL_NZnn = 0xC4,//         C4  CALL    NZ, nn
        PUSH_BC = 0xC5,//         C5  PUSH    BC
        ADD_An = 0xC6,//         C6  ADD A, n
        RST_00H = 0xC7,//         C7  RST 00H
        RET_Z = 0xC8,//         C8  RET Z
        RET = 0xC9,//         C9  RET
        JP_Znn = 0xCA,//         CA  JP  Z, nn
        CB = 0xCB,//         CB  #CB
        CALL_Znn = 0xCC,//         CC  CALL    Z, nn
        CALL_nn = 0xCD,//         CD  CALL    nn
        ADC_An = 0xCE,//         CE  ADC A, n
        RST_08H = 0xCF,//         CF  RST 08H
        RET_NC = 0xD0,//         D0  RET NC
        POP_DE = 0xD1,//         D1  POP DE
        JP_NCnn = 0xD2,//         D2  JP  NC, nn
        OUT_nA = 0xD3,//         D3  OUT(n), A
        CALL_NCnn = 0xD4,//         D4  CALL    NC, nn
        PUSh_DE = 0xD5,//         D5  PUSH    DE
        SUB_n = 0xD6,//         D6  SUB n
        RST_10H = 0xD7,//         D7  RST 10H
        RET_C = 0xD8,//         D8  RET C
        EXX = 0xD9,//         D9  EXX
        JP_Cnn = 0xDA,//         DA  JP  C, nn
        IN_An = 0xDB,//         DB  IN  A, (n)
        CALL_Cnn = 0xDC,//         DC  CALL    C, nn
        DD = 0xDD,//         DD  #DD
        SBC_An = 0xDE,//         DE  SBC A, n
        RST_18H = 0xDF,//         DF  RST 18H
        RET_POnn = 0xE0,//         E0  RET PO
        POP_HL = 0xE1,//         E1  POP HL
        PO_nn = 0xE2,//         E2  JP  PO, nn
        EXSP_HL = 0xE3,//         E3  EX(SP), HL
        CALL_POnn = 0xE4,//         E4  CALL    PO, nn
        PUSH_HL = 0xE5,//         E5  PUSH    HL
        AND_n = 0xE6,//         E6  AND n
        RST_20H = 0xE7,//         E7  RST 20H
        RET_PE = 0xE8,//         E8  RET PE
        JPHL = 0xE9,//         E9  JP(HL)
        JP_PEnn = 0xEA,//         EA  JP  PE, nn
        EX_DEHL = 0xEB,//         EB  EX  DE, HL
        CALL_PEnn = 0xEc,//         EC  CALL    PE, nn
        ED = 0xED,//         ED  #ED
        XOR_n = 0xEE,//         EE  XOR n
        RST_28H = 0xEF,//         EF  RST 28H
        RET_P = 0xF0,//         F0  RET P
        POP_AF = 0xF1,//         F1  POP AF
        JP_Pnn = 0xF2,//         F2  JP  P, nn
        DI = 0xF3,//         F3  DI
        CALL_Pnn = 0xF4,//         F4  CALL    P, nn
        PUSH_AF = 0xF5,//         F5  PUSH    AF
        OR_n = 0xF6,//         F6  OR  n
        RST_30H = 0xF7,//         F7  RST 30H
        RET_M = 0xF8,//         F8  RET M
        LD_SPHL = 0xF9,//         F9  LD  SP, HL
        JP_Mnn = 0xFA,//         FA  JP  M, nn
        EI = 0xFB,//         FB  EI
        CALL_Mnn = 0xFC,//         FC  CALL    M, nn
        FD = 0xFD,//         FD  #FD
        CP_n = 0xFE,//         FE  CP  n
        RST_38H = 0xFF//         FF  RST 38H
    };
}

#endif


